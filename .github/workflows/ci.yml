name: PlantBuilder CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Run TypeScript check
      run: npx tsc --noEmit
    
    - name: Build application
      run: npm run build
      env:
        MONGODB_URI: mongodb://localhost:27017/plantbuilder-test
        NEXTAUTH_SECRET: test-secret
        JWT_SECRET: test-jwt-secret
    
    # - name: Run unit tests
    #   run: npm run test
    
    # - name: Run E2E tests
    #   run: npm run test:e2e
    #   env:
    #     MONGODB_URI: mongodb://localhost:27017/plantbuilder-test

  docker-build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/plantbuilder:latest
          ${{ secrets.DOCKER_USERNAME }}/plantbuilder:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deployment step - configure based on your hosting provider"
        echo "Docker image: ${{ secrets.DOCKER_USERNAME }}/plantbuilder:${{ github.sha }}"
        # Add deployment commands here (AWS ECS, Vercel, etc.) 